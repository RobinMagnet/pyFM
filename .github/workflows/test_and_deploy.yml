name: tests

on:
  push:
    branches:
      - main
      - master
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest] # ubuntu-latest is failing anyway
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # note: if you need dependencies from conda, considering using
      # setup-miniconda: https://github.com/conda-incubator/setup-miniconda
      # and
      # tox-conda: https://github.com/tox-dev/tox-conda
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools pytest-cov
          pip install .

      # this runs the platform-specific tests
      - name: Run tests
        shell: bash -l {0}
        run: pytest -v --cov=./ --cov-report=xml
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Coverage
        uses: codecov/codecov-action@v3

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          git tag
          python -m build .
          twine upload dist/*
